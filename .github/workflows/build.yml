name: Build
on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "Dockerfile"
      - "baseos_digest"
  pull_request:
    branches: ["*"]

env:
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_VSC: ${{ github.event.repository.html_url }}
  PLATFORMS: linux/amd64

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out codebase
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          if [ -z $(jq -r .baseos.digest baseos_digest) ]; \
          then echo "BASEOS_DIGEST=""" >> $GITHUB_ENV; \
          else echo "BASEOS_DIGEST="@$(jq -r .baseos.digest baseos_digest)"" >> $GITHUB_ENV; \
          fi

      - name: Build a test image
        run: |
          docker build --build-arg BASEOS_DIGEST=${{ env.BASEOS_DIGEST }} --tag test-image .

      - name: Create a test container
        run: >-
          docker run --name test-container --detach --privileged
          --volume /sys/fs/cgroup:/sys/fs/cgroup:rw
          --tmpfs /run --tmpfs /tmp
          --cgroupns host
          test-image

      - name: Check if container is running
        run: timeout 20s bash -c 'until [ "$(docker inspect -f {{.State.Running}} test-container)" == "true" ]; do sleep 2; done'

      - name: Test systemctl
        run: docker exec --tty test-container env TERM=xterm systemctl --version

  release:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out codebase
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "BASEOS_NAME=$(jq -r .baseos.name baseos_digest)" >> $GITHUB_ENV

          if [ -z $(jq -r .baseos.digest baseos_digest) ]; \
          then echo "BASEOS_DIGEST=""" >> $GITHUB_ENV; \
          else echo "BASEOS_DIGEST="@$(jq -r .baseos.digest baseos_digest)"" >> $GITHUB_ENV; \
          fi

      - name: Create Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.source=${{ env.IMAGE_VSC }}
            org.opencontainers.image.title=${{ env.IMAGE_NAME }} 
            org.opencontainers.image.base.digest=${{ env.BASEOS_DIGEST }}
            org.opencontainers.image.base.name=${{ env.BASEOS_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASEOS_DIGEST=${{ env.BASEOS_DIGEST }}

      - name: Update Docker Hub description
        if: github.event_name != 'pull_request'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          short-description: ${{ github.event.repository.description }}
